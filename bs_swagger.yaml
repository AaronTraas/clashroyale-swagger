openapi: 3.0.0
servers:
  - url: 'https://api.brawlstars.com/v1'
info:
  description: >-
    Unofficial Swagger definition for the official Brawl Stars API
  version: 1.0.0
  title: Brawl Stars API
  termsOfService: http://supercell.com/en/terms-of-service/
  license:
    name: GNU Lesser General Public License 3.0
    url: https://www.gnu.org/licenses/lgpl-3.0.html
tags:
  - name: players
    description: Fetch player information
  - name: clubs
    description: Fetch club information
  - name: rankings
    description: Fetch ranking information
  - name: brawlers
    description: Fetch brawler information

paths:
  '/players/{playerTag}':
   get:
      summary: Get player information
      description: >
        Get information about a single player by player tag. Player tags can be found either in game or by from club member lists.
        Note that player tags start with hash character '#' and that needs to be URL-encoded properly to work in URL, so for example player tag '#2ABC' would become '%232ABC' in the URL.
      tags:
        - players
      operationId: getPlayer
      parameters:
        - name: playerTag
          in: path
          description: |
            Tag of the player to retrieve.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerDetail'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RequestThrottled'
        '500':
          $ref: '#/components/responses/UnknownException'
        '503':
          $ref: '#/components/responses/InMaintenance'

  '/players/{playerTag}/battlelog':
   get:
      summary: Get player's battlelog
      description: Get information about a single player's battlelog
      tags:
        - battlelog
      operationId: getBattlelog
      parameters:
        - name: playerTag
          in: path
          description: |
            Tag of the player's battle log to retrieve.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerBattleLog'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RequestThrottled'
        '500':
          $ref: '#/components/responses/UnknownException'
        '503':
          $ref: '#/components/responses/InMaintenance'
security:
  - JWT: []
components:
  responses:
    BadRequest:
      description: Client provided incorrect parameters for the request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Forbidden:
      description: >
        Access denied, either because of missing/incorrect credentials or used API token does not grant access to the requested resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: Resource was not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    RequestThrottled:
      description: >
        Request was throttled, because amount of requests was above the threshold defined for the used API token.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    UnknownException:
      description: |
        Unknown error happened when handling the request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InMaintenance:
      description: |
        Service is temporarily unavailable because of maintenance.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  securitySchemes:
    JWT:
      type: apiKey
      description: JSON Web Token used as an API key
      name: authorization
      in: header

  schemas:
    Error:
      type: object
      properties:
        reason:
          type: string
        message:
          type: string

    PlayerDetail:
      type: object
      properties:
        tag:
          type: string
        name:
          type: string
        trophies:
          type: integer
        expLevel:
          type: integer
        expPoints:
          type: integer
        highestTrophies:
          type: integer
        powerPlayPoints:
          type: integer
        highestPowerPlayPoints:
          type: integer
        soloVictories:
          type: integer
        duoVictories:
          type: integer
        bestRoboRumbleTime:
          type: integer
        bestTimeAsBigBrawler:
          type: integer
        club:
          $ref: '#/components/schemas/ClubBase'
        brawlers:
          type: array
          items:
            $ref: '#/components/schemas/Brawler'

    ClubBase:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string

    Brawler:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        power:
          type: integer
        rank:
          type: integer
        trophies:
          type: integer
        highestTrophies:
          type: integer
        starPowers:
          type: array
          items:
            $ref: '#/components/schemas/StarPowers'
        gadgets:
          type: array
          items:
            $ref: '#/components/schemas/Gadgets'

    StarPowers:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string

    Gadgets:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string

    BrawlerList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Brawler'

    PlayerBattleLog:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Battles'

    Battles:
      type: object
      properties:
        battleTime:
          type: string
        event:
          type: array
          items:
            $ref: "#/components/schemas/Event"

    Event:
      type: object
      properties:
        id:
          type: integer
        mode:
          type: string
        map:
          type: string
        battle:
          type: array
          items:
            $ref: "#/components/schemas/Battle"

    Battle:
      type: object
      properties:
        mode:
          type: string
        type:
          type: string
        result:
          type: string
        duration:
          type: integer
        trophyChange:
          type: integer
        starPlayer:
          type: array
          items:
            $ref:  "#/components/schemas/starPlayer"
        teams:
          type: array
          items:
            $ref: "#/components/schemas/teams"

    starPlayer:
      type: object
      properties:
        tag:
          type: string
        name:
          type: string
        brawler:
          type: array
          $ref:  "#/components/schemas/starBrawler"

    starBrawler:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        power:
          type: integer
        trophies:
          type: integer

    teams:
      type: object
      properties:
        tag:
          type: string
        name:
          type: string
        brawler:
          type: array
          items:
           $ref: "#/components/schemas/BattleBrawler"

    BattleBrawler:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        power:
          type: integer
        trophies:
          type: integer
